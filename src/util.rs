use std::fs;
use std::path::Path;
use std::sync::{Arc, Mutex};

use ethereum_types::U256;
use serde::de::{Error, Unexpected};
use serde::{Deserialize, Deserializer, Serializer};

use crate::state::OmeState;

pub const TCR_ABI: &str = r#"
[{"inputs":[{"internalType":"bytes32","name":"_marketId","type":"bytes32"},{"internalType":"uint256","name":"_minMargin","type":"uint256"},{"internalType":"address","name":"_marginToken","type":"address"},{"internalType":"address","name":"_oracle","type":"address"},{"internalType":"address","name":"_gasPriceOracle","type":"address"},{"internalType":"address","name":"_accountContract","type":"address"},{"internalType":"address","name":"_priceContract","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"receiver","type":"address"}],"name":"FeeReceiverUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"int256","name":"fundingRate","type":"int256"},{"indexed":false,"internalType":"int256","name":"fundingRateValue","type":"int256"},{"indexed":false,"internalType":"uint256","name":"time","type":"uint256"}],"name":"FundingRateUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"int256","name":"fundingRate","type":"int256"},{"indexed":false,"internalType":"int256","name":"fundingRateValue","type":"int256"},{"indexed":false,"internalType":"uint256","name":"time","type":"uint256"}],"name":"InsuranceFundingRateUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"orderId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountOutstanding","type":"uint256"},{"indexed":false,"internalType":"address","name":"taker","type":"address"},{"indexed":false,"internalType":"address","name":"maker","type":"address"},{"indexed":false,"internalType":"bytes32","name":"marketId","type":"bytes32"}],"name":"OrderFilled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"orderId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"int256","name":"price","type":"int256"},{"indexed":false,"internalType":"address","name":"maker","type":"address"},{"indexed":false,"internalType":"bool","name":"isLong","type":"bool"},{"indexed":false,"internalType":"bytes32","name":"marketId","type":"bytes32"}],"name":"OrderMade","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"FUNDING_RATE_SENSITIVITY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function","constant":true},{"inputs":[],"name":"LIQUIDATION_GAS_COST","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function","constant":true},{"inputs":[],"name":"accountContract","outputs":[{"internalType":"contract IAccount","name":"","type":"address"}],"stateMutability":"view","type":"function","constant":true},{"inputs":[],"name":"currentHour","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function","constant":true},{"inputs":[],"name":"gasPriceOracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","constant":true},{"inputs":[],"name":"insuranceContract","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","constant":true},{"inputs":[],"name":"marginToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","constant":true},{"inputs":[],"name":"marketId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function","constant":true},{"inputs":[],"name":"minMargin","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function","constant":true},{"inputs":[],"name":"oracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","constant":true},{"inputs":[],"name":"orderCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function","constant":true},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"orders","outputs":[{"internalType":"address","name":"maker","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"int256","name":"price","type":"int256"},{"internalType":"uint256","name":"filled","type":"uint256"},{"internalType":"bool","name":"side","type":"bool"},{"internalType":"uint256","name":"expiration","type":"uint256"},{"internalType":"uint256","name":"creation","type":"uint256"}],"stateMutability":"view","type":"function","constant":true},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","constant":true},{"inputs":[],"name":"priceMultiplier","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function","constant":true},{"inputs":[],"name":"pricingContract","outputs":[{"internalType":"contract IPricing","name":"","type":"address"}],"stateMutability":"view","type":"function","constant":true},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"tradePermissions","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function","constant":true},{"inputs":[],"name":"initializePricing","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"int256","name":"price","type":"int256"},{"internalType":"bool","name":"side","type":"bool"},{"internalType":"uint256","name":"expiration","type":"uint256"}],"name":"makeOrder","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"int256","name":"price","type":"int256"},{"internalType":"bool","name":"side","type":"bool"},{"internalType":"uint256","name":"expiration","type":"uint256"},{"internalType":"address","name":"maker","type":"address"}],"name":"permissionedMakeOrder","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"orderId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"takeOrder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"orderId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"_taker","type":"address"}],"name":"permissionedTakeOrder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"settle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"orderId","type":"uint256"}],"name":"getOrder","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"int256","name":"","type":"int256"},{"internalType":"bool","name":"","type":"bool"},{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","constant":true},{"inputs":[{"internalType":"uint256","name":"orderId","type":"uint256"},{"internalType":"address","name":"taker","type":"address"}],"name":"getOrderTakerAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function","constant":true},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"tracerGetBalance","outputs":[{"internalType":"int256","name":"margin","type":"int256"},{"internalType":"int256","name":"position","type":"int256"},{"internalType":"int256","name":"totalLeveragedValue","type":"int256"},{"internalType":"uint256","name":"deposited","type":"uint256"},{"internalType":"int256","name":"lastUpdatedGasPrice","type":"int256"},{"internalType":"uint256","name":"lastUpdatedIndex","type":"uint256"}],"stateMutability":"view","type":"function","constant":true},{"inputs":[],"name":"leveragedNotionalValue","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function","constant":true},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bool","name":"permission","type":"bool"}],"name":"setUserPermissions","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"insurance","type":"address"}],"name":"setInsuranceContract","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"setAccountContract","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pricing","type":"address"}],"name":"setPricingContract","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_oracle","type":"address"}],"name":"setOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_gasOracle","type":"address"}],"name":"setGasOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}]"#;

/// Helper to convert from hexadecimal strings to decimal strings
///
/// This is necessary to override serde's defaults for the underlying field
/// types we're using.
pub fn from_hex_se<S>(x: &U256, serializer: S) -> Result<S::Ok, S::Error>
where
    S: Serializer,
{
    /* try to convert to an unsigned 128-bit integer, otherwise strip high bits */
    let casted_val: u128 = match *x {
        x if x <= U256::from(u128::MAX) => x.as_u128(),
        _ => x.low_u128(),
    };

    serializer.serialize_u128(casted_val)
}

/// Helper to convert from hexadecimal strings to decimal strings
///
/// This is necessary to override serde's defaults for the underlying field
/// types we're using.
pub fn from_hex_de<'de, D>(deserializer: D) -> Result<U256, D::Error>
where
    D: Deserializer<'de>,
{
    let s: String = Deserialize::deserialize(deserializer)?;
    U256::from_dec_str(&s).map_err(|_e| {
        D::Error::invalid_type(
            Unexpected::Other(&"non-decimal string"),
            &"decimal string",
        )
    })
}

pub fn is_existing_state(path: &Path) -> bool {
    path.exists()
}

pub fn dump_state(state: Arc<Mutex<OmeState>>, path: &Path) {
    fs::write(path, serde_json::to_string(&state).unwrap()).unwrap()
}
